#!/usr/bin/stap

@define GREEN %( "\033[32m" %)
@define PURPLE %( "\033[35m" %)
@define END %( "\033[0m" %)

function pcall(color, parms) {
  if (pid() == target())
    printf("%s%#x%s %s -> %s(%s)\n", color, addr(), @END, thread_indent(1),
           ppfunc(), parms);
}

function pret(color, value) {
  if (pid() == target())
    printf("%s%#x%s %s <- %s(): %s\n", color, addr(), @END, thread_indent(-1),
           ppfunc(), value);
}

probe begin { printf("[begin] %d: %s\n", pid(), execname()); }
probe end { printf("[end]\n"); }

probe process(@1).function("*").call { pcall(@GREEN, $$parms); }
probe process(@1).function("*").return { pret(@GREEN, $$return); }

probe process(@1).library("/usr/lib/libc.so.6").function("*").call {
  pcall(@PURPLE, $$parms);
}
probe process(@1).library("/usr/lib/libc.so.6").function("*").return {
  pret(@PURPLE, $$return);
}
